#include <stdio.h>

/* Sabitlerle satir ve sutun sayisini belirliyoruz. 
 Bu sayilar matrisi olustururken kullaniliyor.*/
#define satir 8
#define sutun 10

int main() {
    // Ornek veri dosyasini olusturuyoruz. Bu dosya, "puanlar.txt" adi ile yaziliyor.
    FILE *dosya = fopen("puanlar.txt", "w");

    // Dosya acma islemi basarisiz olursa bir hata mesaji veriyoruz.
    if (dosya == NULL) {
        printf("Hata: Dosya olusturulamadi!\n");
        return 1;
    } else {
        // Ornek puanlari dosyaya yaziyoruz. Bu veriler matrise yuklenip islenecek.
        fprintf(dosya, "0 1 2 1 2 2 1 0 1 0\n"
                      "2 3 3 0 3 2 3 3 4 1\n"
                      "1 3 4 1 4 2 1 4 2 3\n"
                      "3 4 2 3 0 3 4 2 4 2\n"
                      "4 1 3 2 2 1 3 0 1 0\n"
                      "4 4 3 2 1 4 4 1 4 1\n"
                      "1 3 1 3 2 4 1 4 3 4\n"
                      "2 2 2 3 4 2 3 4 3 3\n");
        fclose(dosya); // Islem bittikten sonra dosyayi kapatiyoruz.
    }

    // Kullanicidan giris ve cikis dosyalarinin adini aliyoruz.
    char girdi_dosyasi[50], cikti_dosyasi[50];
    printf("Puanlarin tutuldugu dosyanin adini giriniz: ");
    scanf("%49s", girdi_dosyasi);
    printf("Sonuclar hangi dosyaya kaydedilsin: ");
    scanf("%49s", cikti_dosyasi);

    // Puanlari tutacak matrisi tanimliyoruz.
    int matris[satir][sutun];

    // Giris dosyasini aciyoruz ve puanlari okuyoruz.
    FILE *girdi = fopen(girdi_dosyasi, "r");

    // Dosya acilamazsa hata mesaji gosteriyoruz.
    if (girdi == NULL) {
        printf("Hata: %s dosyasi acilamadi!\n", girdi_dosyasi);
        return 1;
    } else {
        // Matrisi dosyadan okuyarak dolduruyoruz.
        for (int i = 0; i < satir; i++) {
            for (int j = 0; j < sutun; j++) {
                fscanf(girdi, "%d", &matris[i][j]);
            }
        }
        fclose(girdi); // Okuma islemi bitince dosyayi kapatiyoruz.
    }

    // Urunlerin toplam puanlarini hesaplamak icin bir dizi tanimliyoruz.
    int toplam_urun[satir] = {0};

    // Ailelerin toplam puanlarini hesaplamak icin baska bir dizi tanimliyoruz.
    int toplam_aile[sutun] = {0};

    // Matris uzerinden gecerek urun ve aile toplamlarini hesapliyoruz.
    for (int i = 0; i < satir; i++) {
        for (int j = 0; j < sutun; j++) {
            toplam_urun[i] += matris[i][j]; // Urun icin puan ekliyoruz.
            toplam_aile[j] += matris[i][j]; // Aile icin puan ekliyoruz.
        }
    }

    // En cok begenilen urunu ve en az begenen aileyi hesaplamak icin fonksiyonlarimizi cagiriyoruz.
    int en_cok_begenilen_urun = enCokBegenilenUrun(toplam_urun);
    int en_az_begenen_aile = enAzBegenenAile(toplam_aile);

    // Cikis dosyasini olusturuyoruz ve sonuclari yaziyoruz.
    FILE *cikti = fopen(cikti_dosyasi, "w");

    // Cikis dosyasi acilamazsa hata mesaji gosteriyoruz.
    if (cikti == NULL) {
        printf("Hata: %s dosyasi olusturulamadi!\n", cikti_dosyasi);
        return 1;
    } else {
        /* Sonuclari dosyaya yaziyoruz. 
         Urun ve aile numaralarini 1 artirarak insanlara uygun hale getiriyoruz (0'dan baslamasin).*/
        fprintf(cikti, "En cok begenilen urun no: %d\n", en_cok_begenilen_urun + 1);
        fprintf(cikti, "En az begenen aile no: %d\n", en_az_begenen_aile + 1);
        fclose(cikti); // Islem bitince dosyayi kapatiyoruz.
        printf("%s dosyasi basariyla olusturuldu.\n", cikti_dosyasi);
    }

    return 0;
}
